version: '3'
services:
  nginx:
    # image: nginx:latest
    # container_name: nginx
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./dist:/usr/share/nginx/html
      - D:\aox2\SSL\cert.pem:/etc/nginx/ssl/cert.pem:ro 
      - D:\aox2\SSL\privKey.pem:/etc/nginx/ssl/privKey.pem:ro 
    depends_on:
      # - react-app
      - fastapi
      - fail2ban
    networks:
      - app-network
  # react-app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: react-app
  #   volumes:
  #     - ./dist:/usr/share/nginx/html
  #   expose:
  #     - "3000" #개발 서버용
  #   networks:
  #     - app-network
    
  fastapi:
    build:
      context: D:\Checkmate2  # FastAPI Dockerfile의 경로
      dockerfile: Dockerfile
    container_name: fastapi
    volumes:
      - D:\Checkmate2:/app  # 호스트의 프로젝트 폴더를 컨테이너에 마운트
    expose:
      - "8000"
    networks:
      - app-network

  fail2ban:
    image: crazymax/fail2ban:latest
    container_name: fail2ban
    network_mode: "host"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - "./data:/data"
      - "./fail2ban/sshd.conf:/etc/fail2ban/jail.d/sshd.conf"
      - "./log:/var/log:ro"
      - "./log/nginx/error.log:/var/log/nginx/error.log:ro"
    env_file:
      - "./fail2ban.env"
    restart: always


networks:
  app-network:
    driver: bridge

# version: '3'
# services:
#   react-app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     volumes:
#       - ./dist:/usr/share/nginx/html
#     ports:
#       - "80:80"
#       - "7919:80"
